package com.ncs.spring02.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.ncs.spring02.domain.MemberDTO;
import com.ncs.spring02.service.MemberService;

@Controller
@RequestMapping(value = "member")
public class MemberController {
	@Autowired(required = false)
	MemberService service;

	// Member Login
//	@RequestMapping(value = {"/loginForm"}, method = RequestMethod.GET)
//	public String loginForm( Model model ) {
//		return "member/loginForm";
//	};
	// return void
	// -> viewName 생략 : 요청명과 동일한 viewName을 찾는다
	// /WEB-INF/views/ + value + .jsp 완성됨
	@RequestMapping(value = { "/loginForm" }, method = RequestMethod.GET)
	public void loginForm() {
	};

	@RequestMapping(value = "/login", method = RequestMethod.POST)
	public String login(HttpSession session, Model model, MemberDTO dto) {
		// 매핑메서드의 인자객체와 동일한 컬럼명의 값은 자동으로 할당
		// -> 아래의 구문은 필요없음
//		String id = request.getParameter("id");
//		String password = request.getParameter("password");

		String password = dto.getPassword();
		String uri = "redirect:/home";

		dto = service.selectOne(dto.getId());
		if ( dto != null && dto.getPassword().equals(password)) {
			session.setAttribute("loginId", dto.getId());
			session.setAttribute("loginName", dto.getName());
		} else {
			uri="member/loginForm";
			model.addAttribute("message", "로그인 실패 다시 로그인 하세요");
		}
		
		return uri;
	};

	// Member Login
	@RequestMapping(value = { "/joinForm" }, method = RequestMethod.GET)
	public String joinForm() {
		return "member/joinForm";
	};

	// Member List
	@RequestMapping(value = { "/memberList" }, method = RequestMethod.GET)
	public void mList(Model model) {
		model.addAttribute("mList", service.selectList());
	};

	// Member Detail
	@RequestMapping(value = { "/detail" }, method = RequestMethod.GET)
	public String handleRequest(Model model) {
		model.addAttribute("mDetail", service.selectOne("simsim916"));
		return "member/mDetail";
	};
}
