/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-01-26 11:03:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import mvcTest.StudentDTO;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1705377338180L));
    _jspx_dependants.put("jar:file:/Z:/JavaWebStudy/MyWork/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/web01/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("mvcTest.StudentDTO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../CSS/nav.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"./CSS/itemDetail.css\">\r\n");
      out.write("    <!-- 폰트어썸 -->\r\n");
      out.write("    <script src=\"https://kit.fontawesome.com/d68045e863.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <!-- 폰트 -->\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("    <link\r\n");
      out.write("        href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;200;300;400;500;600;700;800;900&display=swap\"\r\n");
      out.write("        rel=\"stylesheet\">\r\n");
      out.write("    <title>Document</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <header id=\"topBar\">\r\n");
      out.write("        <div id=\"loginBar\">\r\n");
      out.write("            <div class=\"container\">\r\n");
      out.write("                <a href=\"\">고객센터</a>\r\n");
      out.write("                &nbsp;&nbsp;|&nbsp;&nbsp;\r\n");
      out.write("                <a href=\"\">로그인</a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    \r\n");
      out.write("        <div id=\"searchBar\">\r\n");
      out.write("            <div class=\"container\">\r\n");
      out.write("                <div id=\"logoBox\">\r\n");
      out.write("                    <img src=\"/img/logo.png\" alt=\"\">\r\n");
      out.write("                    <h1>사이트이름</h1>\r\n");
      out.write("                </div>\r\n");
      out.write("                <form id=\"searchBox\">\r\n");
      out.write("                    <input type=\"text\" placeholder=\"검색어를 입력해주세요.\">\r\n");
      out.write("                    <i class=\"fa-solid fa-circle-xmark\"></i>\r\n");
      out.write("                    <i class=\"fa-solid fa-magnifying-glass\"></i>\r\n");
      out.write("                </form>\r\n");
      out.write("                <div id=\"searchRightBox\">\r\n");
      out.write("                    <div id=\"myPage\">\r\n");
      out.write("                        <i class=\"fa-solid fa-user\"></i>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div id=\"myCart\">\r\n");
      out.write("                        <i class=\"fa-solid fa-cart-shopping\"></i>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div id=\"myItem\">\r\n");
      out.write("                        <i class=\"fa-solid fa-box-archive\"></i>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    \r\n");
      out.write("        <nav>\r\n");
      out.write("            <div class=\"container\">\r\n");
      out.write("                <div id=\"categoryBox\">\r\n");
      out.write("                    <div onmouseover=\"firstCategoryVisible()\" id=\"categoryTag\"><i\r\n");
      out.write("                            class=\"fa-solid fa-bars\"></i>&nbsp;&nbsp;&nbsp;카테고리</div>\r\n");
      out.write("                    <ul onmouseout=\"firstCategoryHidden()\" onmouseover=\"firstCategoryVisible()\" id=\"firstCategory\">\r\n");
      out.write("                        <li></li>\r\n");
      out.write("                        <li id=\"firstCategorySearch\">\r\n");
      out.write("                            <div>\r\n");
      out.write("                                <input type=\"text\"><i class=\"fa-solid fa-circle-xmark\"></i>\r\n");
      out.write("                                <i class=\"fa-solid fa-magnifying-glass\"></i>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        <li><img src=\"/img/category_vitamin.png\" alt=\"category_vitamin\">건강식품</li>\r\n");
      out.write("                        <li><img src=\"/img/category_chicken.png\" alt=\"category_chicken\">계육</li>\r\n");
      out.write("                        <li><img src=\"/img/category_etc.png\" alt=\"category_etc\">기타</li>\r\n");
      out.write("                        <li><img src=\"/img/category_wheat.png\" alt=\"category_wheat\">농산가공</li>\r\n");
      out.write("                        <li><img src=\"/img/category_pig.png\" alt=\"category_pig\">돈육</li>\r\n");
      out.write("                        <li><img src=\"/img/category_noodle.png\" alt=\"category_noodle\">면류</li>\r\n");
      out.write("                        <li><img src=\"/img/category_flour.png\" alt=\"category_flour\">분말류</li>\r\n");
      out.write("                        <li><img src=\"/img/category_blush.png\" alt=\"category_blush\">생활용품</li>\r\n");
      out.write("                        <li><img src=\"/img/category_detergent.png\" alt=\"category_detergent\">세제류</li>\r\n");
      out.write("                        <li><img src=\"/img/category_fish.png\" alt=\"category_fish\">수산가공</li>\r\n");
      out.write("                        <li><img src=\"/img/category_vegetable.png\" alt=\"category_vegetable\">야채</li>\r\n");
      out.write("                        <li><img src=\"/img/category_wheat.png\" alt=\"category_wheat\">양곡</li>\r\n");
      out.write("                        <li><img src=\"/img/category_sheep.png\" alt=\"category_sheep\">양육</li>\r\n");
      out.write("                        <li><img src=\"/img/category_seashel.png\" alt=\"category_seashel\">어패류</li>\r\n");
      out.write("                        <li><img src=\"/img/category_cow.png\" alt=\"category_cow\">우육</li>\r\n");
      out.write("                        <li><img src=\"/img/category_cheese.png\" alt=\"category_cheese\">유제품</li>\r\n");
      out.write("                        <li><img src=\"/img/category_oils.png\" alt=\"category_oils\">유지류</li>\r\n");
      out.write("                        <li><img src=\"/img/category_drink.png\" alt=\"category_drink\">음료ㆍ차</li>\r\n");
      out.write("                        <li><img src=\"/img/category_gimbap.png\" alt=\"category_gimbap\">일반가공</li>\r\n");
      out.write("                        <li><img src=\"/img/category_bread.png\" alt=\"category_bread\">제과</li>\r\n");
      out.write("                        <li><img src=\"/img/category_cookedFood.png\" alt=\"category_cookedFood\">조리식품</li>\r\n");
      out.write("                        <li><img src=\"/img/category_seasoning.png\" alt=\"category_seasoning\">조미식품</li>\r\n");
      out.write("                        <li><img src=\"/img/category_fruit.png\" alt=\"category_fruit\">청과</li>\r\n");
      out.write("                        <li><img src=\"/img/category_meat.png\" alt=\"category_meat\">축산가공</li>\r\n");
      out.write("                        <li><img src=\"/img/category_seaweed.png\" alt=\"category_seaweed\">해조류</li>\r\n");
      out.write("                    </ul>\r\n");
      out.write("                    <ul onmouseout=\"firstCategoryHidden()\" onmouseover=\"firstCategoryVisible()\" id=\"secondCategory\">\r\n");
      out.write("                        <li></li>\r\n");
      out.write("                        <li id=\"secondCategorySearch\">\r\n");
      out.write("                            <div>\r\n");
      out.write("                                <input type=\"text\"><i class=\"fa-solid fa-circle-xmark\"></i>\r\n");
      out.write("                                <i class=\"fa-solid fa-magnifying-glass\"></i>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        <li>채소</li>\r\n");
      out.write("                        <li>과일ㆍ견과ㆍ쌀</li>\r\n");
      out.write("                        <li>수산ㆍ해산ㆍ건어물</li>\r\n");
      out.write("                        <li>정육ㆍ가공육ㆍ계란</li>\r\n");
      out.write("                        <li>국ㆍ반찬ㆍ메인요리</li>\r\n");
      out.write("                        <li>간편식ㆍ밀키트ㆍ샐러드</li>\r\n");
      out.write("                        <li>면ㆍ양념ㆍ오일</li>\r\n");
      out.write("                        <li>생수ㆍ음료ㆍ커피</li>\r\n");
      out.write("                        <li>간식ㆍ과자ㆍ떡</li>\r\n");
      out.write("                        <li>베이커리</li>\r\n");
      out.write("                        <li>유제품</li>\r\n");
      out.write("    \r\n");
      out.write("                    </ul>\r\n");
      out.write("                </div>\r\n");
      out.write("                <ul id=\"navBar\">\r\n");
      out.write("                    <li>식단 주문</li>\r\n");
      out.write("                    <li>재료 주문</li>\r\n");
      out.write("                    <li>이벤트</li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("        </nav>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    </header>\r\n");
      out.write("    <main id=\"itemDetailBox\" class=\"container\">\r\n");
      out.write("        <div id=\"imgBox\">\r\n");
      out.write("            <div id=\"imgBoxImg\">\r\n");
      out.write("                <img src=\"../img/itemImg/5000003_1.jpg\" alt=\"\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <div id=\"imgBoxImgList\">\r\n");
      out.write("                <div></div>\r\n");
      out.write("                <div></div>\r\n");
      out.write("                <div></div>\r\n");
      out.write("                <div></div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- <div>샛별배송</div>\r\n");
      out.write("        <h2>[일일특가][압구정] 오징어/낙지 볶음2종(택1)</h2>\r\n");
      out.write("        <div>마늘의 감칠맛이 듬뿍</div> -->\r\n");
      out.write("\r\n");
      out.write("        <div id=\"itemDetailSM\">\r\n");
      out.write("            <div id=\"itemDetailTitle\">\r\n");
      out.write("                <div id=\"title1\">새벽배송</div>\r\n");
      out.write("                <div id=\"title2\">[일일특가][압구정] 오징어/낙지 볶음 2종(택1)</div>\r\n");
      out.write("                <div id=\"title3\">마늘의 감칠맛이 듬뿍</div>\r\n");
      out.write("                <span id=\"title4\">33<span>%</span></span>\r\n");
      out.write("                <div id=\"title5\">15,900원</div>\r\n");
      out.write("                <div id=\"title6\">10,500원</div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div>배송</div>\r\n");
      out.write("            <div>새벽배송<br>(23시 전 주문 시 내일 아침 7시 전 도착)</div>\r\n");
      out.write("            <div>제조사</div>\r\n");
      out.write("            <div>김구원선생</div>\r\n");
      out.write("            <div>포장타입</div>\r\n");
      out.write("            <div>냉동</div>\r\n");
      out.write("            <div>판매단위</div>\r\n");
      out.write("            <div>1팩</div>\r\n");
      out.write("            <div>중량/용량</div>\r\n");
      out.write("            <div>356g</div>\r\n");
      out.write("            <div>유통기한</div>\r\n");
      out.write("            <div>수령일 포함 180일 이상 남은 제품을 보내드립니다.</div>\r\n");
      out.write("            <div id=\"itemSelect\">\r\n");
      out.write("                <div>수량 선택</div>\r\n");
      out.write("                <div id=\"countBox\">\r\n");
      out.write("                    <button><i class=\"fa-solid fa-plus\"></i></button>\r\n");
      out.write("                    <input type=\"text\">\r\n");
      out.write("                    <button><i class=\"fa-solid fa-minus\"></i></button>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div id=\"priceBox\">\r\n");
      out.write("                    <div id=\"price\">총 상품금액&nbsp; : &nbsp;<span>30000원</span></div>\r\n");
      out.write("                    <div id=\"cart\">장바구니 담기</div>\r\n");
      out.write("                    <div id=\"buy\">구매하기</div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("    </main>\r\n");
      out.write("    <ul id=\"detailClick\" class=\"container\">\r\n");
      out.write("        <li>상품설명</li>\r\n");
      out.write("        <li>상세정보</li>\r\n");
      out.write("        <li>후기</li>\r\n");
      out.write("        <li>문의</li>\r\n");
      out.write("    </ul>\r\n");
      out.write("    <div id=\"introItem\" class=\"container\">\r\n");
      out.write("        제품 조리 사진\r\n");
      out.write("        <img src=\"../img/itemImg/5000003_2.jpg\" alt=\"\">\r\n");
      out.write("        제품 구성 사진\r\n");
      out.write("        <img src=\"../img/itemImg/5000003_3.jpg\" alt=\"\">\r\n");
      out.write("        제품 표시사항 및 크기\r\n");
      out.write("        <img src=\"../img/itemImg/5000003_4.jpg\" alt=\"\">\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("    let firstCategory = document.getElementById(\"firstCategory\");\r\n");
      out.write("    function firstCategoryVisible() {\r\n");
      out.write("        firstCategory.style.visibility = \"visible\";\r\n");
      out.write("    }\r\n");
      out.write("    function firstCategoryHidden() {\r\n");
      out.write("        firstCategory.style.visibility = \"hidden\";\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
